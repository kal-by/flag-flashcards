@use "sass:color";

// variables
$boder-radius: 0.35rem;
$color-bg: #111114;
$color-bg-card: #25252e;
$color-text: rgb(221, 221, 221);
$color-text-hint: rgb(150, 150, 150);
$color-success: #00bd3f;
$color-danger: #bd1c00;
$color-disabled: #4a4c52;

// utility
.hidden {
  visibility: hidden;
}

.hcentered {
  margin: auto;
  text-align: center;
}

.hleft {
  margin: auto;
  text-align: left;
}

.vcentered {
  text-align: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.hint {
  color: $color-text-hint;
}

.container {
  padding: 0.5rem;
  display: flex;
  max-width: 900px;
  // min-width: 100px;
}

.modal {
  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: center;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
}

.modal-content {
  border-radius: $boder-radius;
  background-color: $color-bg-card;
  margin: 0 auto;
  padding: 2rem;
  width: 50%;
  max-width: 30rem;
  z-index: 1001;
}

// html elements
* {
  font-family: monospace;
  font-weight: 700;
  color: $color-text;
}

html,
body {
  overflow: hidden;
  background-color: $color-bg;
}

label {
  user-select: none;
}

button {
  border: 0;
  border-radius: $boder-radius;
  padding: 1rem;
  margin: 0.5rem;
  flex-grow: 1;
  flex-basis: 0;

  &.nav {
    background-color: $color-bg-card;
    flex-grow: 0;
    flex-basis: auto;
    width: 4rem;
    height: 4rem;

    &:hover {
      background-color: scale-color($color: $color-bg-card, $lightness: -15%);
    }

    &:active {
      background-color: scale-color($color: $color-bg-card, $lightness: -30%);
    }

    &:disabled {
      background-color: $color-disabled;
    }
  }

  &.success {
    background-color: $color-success;

    &:hover {
      background-color: scale-color($color: $color-success, $lightness: -15%);
    }

    &:active {
      background-color: scale-color($color: $color-success, $lightness: -30%);
    }

    &:disabled {
      background-color: $color-disabled;
    }
  }

  &.danger {
    background-color: $color-danger;

    &:hover {
      background-color: scale-color($color: $color-danger, $lightness: -15%);
    }

    &:active {
      background-color: scale-color($color: $color-danger, $lightness: -30%);
    }

    &:disabled {
      background-color: $color-disabled;
    }
  }
}

// nav and settings
h1.nav {
  flex-grow: 1;
}

.settingsMessage {
  height: 2em;
  padding: 0.5em;

  &.success {
    color: $color-success;
  }

  &.danger {
    color: $color-danger;
  }
}

// cards and controls
.deck {
  width: 100%;
  min-width: 250px;
  padding-bottom: 75%;
  position: relative;
  border-radius: $boder-radius;
}

.card {
  padding-bottom: 75%;
  border-radius: $boder-radius;
  position: absolute;
  width: 100%;
  perspective: 1000px;

  &.slide-left {
    transform: translate(-150%, -100%) rotate(-90deg);
    transition: 0.5s ease;
  }

  &.slide-right {
    transform: translate(150%, -100%) rotate(90deg);
    transition: 0.5s ease;
  }
}

.cardFront,
.cardBack {
  box-sizing: border-box;
  border-radius: $boder-radius;
  width: 100%;
  height: 100%;
  background-color: $color-bg-card;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
  transition: transform 0.5s ease;
  position: absolute;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

.cardFront {
  transform: rotateY(0deg);

  &.flipped {
    transform: rotateY(-180deg);
  }
}

.cardBack {
  transform: rotateY(180deg);
  background-color: $color-bg-card;

  &.flipped {
    transform: rotateY(0deg);
  }
}

.score {
  width: 100%;
  margin: auto;

  &.success {
    color: $color-success;
  }

  &.danger {
    color: $color-danger;
  }
}
