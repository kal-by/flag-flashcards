@use "sass:color";

// variables
$boder-radius: 0.35rem;
$color-bg: rgb(17, 17, 20);
$color-bg-card: rgb(37, 37, 46);
$color-text: rgb(221, 221, 221);
$color-text-hint: rgb(150, 150, 150);
$color-success: rgb(16, 137, 47);
$color-danger: rgb(189, 28, 0);
$color-disabled: rgb(74, 76, 82);

// utility
.hidden {
  visibility: hidden;
}

.mb-0 {
  margin-bottom: 0 !important;
}

.mt-0 {
  margin-top: 0 !important;
}

.hcentered {
  margin: auto;
  text-align: center;
}

.hleft {
  margin: auto;
  display: inline-block;
  text-align: left;
}

.abs-hcentered {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

.vcentered {
  text-align: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.hint {
  color: $color-text-hint;
  font-size: 1rem !important;
}

.block {
  padding-bottom: 1rem;
}

.container {
  padding: 0.5rem;
  display: flex;
  max-width: 900px;
}

.modal {
  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: center;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
}

.modal-content {
  border-radius: $boder-radius;
  background-color: $color-bg-card;
  margin: 0 auto;
  padding: 1rem;
  width: 80%;
  max-width: 30rem;
  z-index: 1001;
}

// html elements
* {
  font-family: monospace;
  font-weight: 700;
  color: $color-text;
}

html,
body {
  overflow: hidden;
  background-color: $color-bg;
}

label {
  user-select: none;
}

button {
  border: 0;
  border-radius: $boder-radius;
  padding: 1rem;
  margin: 0.5rem;
  flex-grow: 1;
  flex-basis: 0;

  &.nav {
    font-size: 1rem;
    background-color: $color-bg-card;
    flex-grow: 0;
    flex-basis: auto;
    width: 4rem;
    height: 4rem;

    @media (hover: hover) and (pointer: fine) {
      &:hover {
        background-color: scale-color($color: $color-bg-card, $lightness: -15%);
      }
    }

    &:active {
      background-color: scale-color($color: $color-bg-card, $lightness: -30%);
    }

    &:disabled {
      background-color: $color-disabled;
    }
  }

  &.control {
    font-size: 1rem;

    &.success {
      background-color: $color-success;

      @media (hover: hover) and (pointer: fine) {
        &:hover {
          background-color: scale-color(
            $color: $color-success,
            $lightness: -15%
          );
        }
      }

      &:active {
        background-color: scale-color($color: $color-success, $lightness: -30%);
      }

      &:disabled {
        background-color: $color-disabled;
      }
    }

    &.danger {
      background-color: $color-danger;

      @media (hover: hover) and (pointer: fine) {
        &:hover {
          background-color: scale-color(
            $color: $color-danger,
            $lightness: -15%
          );
        }
      }

      &:active {
        background-color: scale-color($color: $color-danger, $lightness: -30%);
      }

      &:disabled {
        background-color: $color-disabled;
      }
    }
  }
}

// nav and settings
h1.nav {
  flex-grow: 1;
}

// cards and controls
.deck {
  width: 100%;
  min-width: 250px;
  padding-bottom: calc(200% / 3);
  position: relative;
  border-radius: $boder-radius;
}

.card {
  padding-bottom: calc(200% / 3);
  border-radius: $boder-radius;
  position: absolute;
  width: 100%;
  perspective: 1000px;

  &.slide-left {
    transform: translate(-150%, -100%) rotate(-90deg);
    transition: 0.5s ease;
  }

  &.slide-right {
    transform: translate(150%, -100%) rotate(90deg);
    transition: 0.5s ease;
  }
}

.cardFront,
.cardBack {
  box-sizing: border-box;
  border-radius: $boder-radius;
  width: 100%;
  height: 100%;
  background-color: $color-bg-card;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
  transition: transform 0.5s ease;
  position: absolute;
  backface-visibility: hidden;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: 50% 50%;
}

.cardFront {
  transform: rotateY(0deg);

  &.flipped {
    transform: rotateY(-180deg);
  }
}

.cardBack {
  transform: rotateY(180deg);
  background-color: $color-bg-card;

  &.flipped {
    transform: rotateY(0deg);
  }
}

.cardDisplay {
  width: 75%;

  & h1 {
    font-size: 3rem;
  }

  & h2 {
    font-size: 2rem;
  }

  & h3 {
    font-size: 1.7rem;
  }
}

.scoreDisplay {
  display: flex;
  flex-grow: 1;
}

.scoreDisplayBlock {
  width: 100%;
}

.score {
  margin: auto;
  font-size: 2rem;

  &.success {
    color: $color-success;
  }

  &.danger {
    color: $color-danger;
  }

  &#percentScore {
    font-size: 4rem;
  }
}

.toastContainer {
  display: flex;
  width: 100%;
  justify-content: center;
}

.toast {
  visibility: hidden;
  min-width: 10rem;
  background-color: $color-bg-card;
  text-align: center;
  border-radius: $boder-radius;
  padding: 1rem;
  position: fixed;
  z-index: 2000;

  &.success {
    background-color: $color-success;
  }

  &.danger {
    background-color: $color-danger;
  }

  &.show {
    visibility: visible;
    animation-play-state: running;
    animation: fadeinout 3s;
  }
}

@keyframes fadeinout {
  0% {
    top: 1.5rem;
    opacity: 0;
  }
  20%,
  80% {
    top: 3rem;
    opacity: 1;
  }
  100% {
    top: 1.5rem;
    opacity: 0;
  }
}

@media (width < 525px) {
  .score {
    font-size: 1.7rem;

    &#percentScore {
      font-size: 3rem;
    }
  }

  button.control {
    padding: 2rem;
    font-size: 1.2rem;
  }

  .cardDisplay {
    & h1 {
      font-size: 2rem;
    }

    & h2 {
      font-size: 1.5rem;
    }

    & h3 {
      font-size: 1.3rem;
    }
  }
}
